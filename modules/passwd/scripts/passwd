#!/usr/bin/perl -w

use strict;
use warnings;
use Scripts qw/:all/;

# for passwd the main file is ignored and we only look at supplemental files
my %file = args()
  or die;

if( $^O eq 'linux' ) {
    # linux has /etc/passwd and /etc/shadow

    my $newpasswd = $file{linux}
      or die "missing new passwd file";

    my $newshadow = $file{shadow}
      or die "missing new shadow file";

    install_file(
        template => 0,
        from     => $newpasswd,
        to       => "/etc/passwd",
        pretest  => "egrep -q '^root:[^:]+:0:' {}",
        test     => "id root",
    );

    install_file(
        template => 0,
        from     => $newshadow,
        to       => "/etc/shadow",
        mode     => 0400,
        pretest  => "egrep -q '^root:[^\*]' {}",
        test     => "id root",
    );

    chmod 0400, "/etc/shadow";
    chown 0, 0, "/etc/shadow";
} elsif( $^O eq 'freebsd' ) {
    # freebsd has /etc/master.passwd and an assortment of other files
    # which are created by pwd_mkdb

    my $newpasswd = $file{freebsd}
      or die "missing new passwd file";
    
    # pwd_mkdb requires that the new file be on the same fs as /etc
    my $stage = "/etc/.master.passwd.chisel";
    
    # copy current file over to $stage for diffing purposes
    install_file(
        from     => "/etc/master.passwd",
        to       => $stage,
        mode     => 0600,
    );

    # pwd_mkdb tries to create "$stage.orig", but it also bails if the file
    # is already present. this can happen if pwd_mkdb had earlier died in
    # mid-run so we need to check for it.
    if( my @orig_stat = lstat "${stage}.orig" ) {
        # it exists. delete if it's older than 10 minutes.
        if( $orig_stat[9] + 600 < time() ) {
            Scripts::unlink_file "${stage}.orig";
        } else {
            # we can assume pwd_mkdb will fail if we haven't unlinked the file.
            # so just don't try to run it.
            die "pwd_mkdb probably died recently (${stage}.orig still exists). " .
                "Leaving it alone for now, but we will delete it in a few minutes.\n";
        }
    }

    # install the new file into $stage and run pwd_mkdb if needed
    # -p creates /etc/passwd
    install_file(
        from     => $newpasswd,
        to       => $stage,
        mode     => 0600,
        pretest  => "egrep -q '^root:[^:]+:0:' {}",
        cmd      => "pwd_mkdb -p $stage",
        test     => "id root",
    );
} else {
    die "unsupported os $^O";
}

exit 0;
