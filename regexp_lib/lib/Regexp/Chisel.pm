######################################################################
# Copyright (c) 2012, Yahoo! Inc. All rights reserved.
#
# This program is free software. You may copy or redistribute it under
# the same terms as Perl itself. Please see the LICENSE.Artistic file 
# included with this project for the terms of the Artistic License
# under which this project is licensed. 
######################################################################


package Regexp::Chisel;

use strict;
use warnings;

use Exporter qw/import/;
our @EXPORT_OK = qw/
    $RE_CHISEL_hostname
    $RE_CHISEL_filepart
    $RE_CHISEL_filepart_permissive
    $RE_CHISEL_file
    $RE_CHISEL_file_permissive
    $RE_CHISEL_raw
    $RE_CHISEL_tag_type
    $RE_CHISEL_tag_key
    $RE_CHISEL_tag
    $RE_CHISEL_transform_type
    $RE_CHISEL_transform_key
    $RE_CHISEL_transform
    $RE_CHISEL_username
    $RE_CHISEL_groupname
    /;

our %EXPORT_TAGS = ( "all" => [@EXPORT_OK], );

# NOTE: None of these are allowed to have capture sections (parenthesis like this)
# OR ELSE: It will shift match variable indexes ($1, $2, etc) and might confuse outside code
# TO MAKE GROUPS: Use the (?: ... ) syntax instead of ( ... )

# component of a valid filename that could be generated by a transform
# (like "files", "hosts.allow", and "MAIN" in "files/hosts.allow/MAIN")
our $RE_CHISEL_filepart = qr![a-zA-Z0-9][a-zA-Z0-9\.\-\_]{0,63}!;

# component of a valid filename that could be added to a bucket
# like "DEFAULT" or "360.us" or ".bucket"
our $RE_CHISEL_filepart_permissive = qr!
    # cannot be just a series of dots (it's bad due to "." and "..", also I just don't like it)
    # so ensure that some character somewhere is not a dot:

    \.?                         # may begin with one dot, but not more
    [\w\-\(\)<>'&\#\;"\+\ ]     # not a dot
    [\w\-\(\)<>'&\#\;"\+\ \.]*  # sequence that might include dots
    !x;

# full path of a valid filename that could be generated by a transform. leading slashes are not allowed!
# examples: "files/hosts.allow/MAIN" or "scripts/passwd"
our $RE_CHISEL_file = qr!
    (?:
        # bucket files
        files/$RE_CHISEL_filepart/$RE_CHISEL_filepart

        # bucket scripts
      | scripts/$RE_CHISEL_filepart
    )!x;

# full path of a valid filename that could be added to a bucket. leading slashes are not allowed!
# examples: "DEFAULT" or ".bucket/transforms-index"
our $RE_CHISEL_file_permissive = qr!
    (?:
        # any strict file is OK
        $RE_CHISEL_file

        # or any path with up to 6 permissive fileparts
      | $RE_CHISEL_filepart_permissive(?:/$RE_CHISEL_filepart_permissive){0,5}
    )!x;

# component of a raw file (not exported)
# examples: "foo" or "hosts.allow.corp"
our $RE_CHISEL_rawpart = qr!
    # cannot begin with a dot or whitespace
    [\w\-\(\)<>'&\#\;":]

    # after the first character they are valid, but if you use them, the last must not be whitespace
    (?:[\w\-\(\)<>'&\#\;":\.\ ]*
       [\w\-\(\)<>'&\#\;":\.]    )?
    !x;

# path to a raw file
our $RE_CHISEL_raw = qr!
        $RE_CHISEL_rawpart
    (?:/$RE_CHISEL_rawpart)*
    !x;

# a hostname we'll consider building for
# note: hostname must be all lowercase.
our $RE_CHISEL_hostname = qr!
    [a-z0-9][a-z0-9\-]*            # short hostname
    (?:\.[a-z0-9][a-z0-9\-]*)*     # the rest of the fqdn
  # (?:\:[a-zA-Z0-9\-\_]+)?        # yroot name (optional) (commented since we don't support yroots)
    !x;

# first part of a transform name, the "foo" in "foo/bar"
our $RE_CHISEL_transform_type = qr!\w+!;

# second part of a transform name, the "bar" in "foo/bar"
our $RE_CHISEL_transform_key = qr!
    # cannot begin with a dot or whitespace
    [\w\-\(\)<>'&\#\;"]

    # after the first character they are valid, but if you use them, the last must not be whitespace
    (?:[\w\-\(\)<>'&\#\;"\.\+\ ]*
       [\w\-\(\)<>'&\#\;"\.\+]    )?
    !x;

# tag type/key has the same format as transform type/key
our $RE_CHISEL_tag_type = $RE_CHISEL_transform_type;
our $RE_CHISEL_tag_key  = $RE_CHISEL_transform_key;

our $RE_CHISEL_tag = qr!
    (?:

        $RE_CHISEL_tag_type / $RE_CHISEL_tag_key

        # this is ok too, but it has to be in all caps
        | GLOBAL
    )!x;

# a transform name, like "DEFAULT" or "foo/bar"
our $RE_CHISEL_transform = qr!
    (?:
        # standard transform names like foo/bar
        $RE_CHISEL_transform_type / $RE_CHISEL_transform_key

        # these are ok too, but they have to be in all caps
        | DEFAULT
        | DEFAULT_TAIL
    )!x;

# unix username
our $RE_CHISEL_username = qr![a-z\_][a-z0-9\-\_]{0,30}!;

# unix group name
our $RE_CHISEL_groupname = qr![A-Za-z0-9\_][A-Za-z0-9\-\_]{0,30}!;

1;
